
RemoteSmartHeating.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000276  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000276  000002ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000320  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  0000035c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cc5  00000000  00000000  000003d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006e7  00000000  00000000  00001099  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004c0  00000000  00000000  00001780  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000fc  00000000  00000000  00001c40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000444  00000000  00000000  00001d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006f7  00000000  00000000  00002180  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002877  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e7       	ldi	r30, 0x76	; 118
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <main>
  7a:	0c 94 39 01 	jmp	0x272	; 0x272 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_Command>:
}

void UART_TxChar(char ch)
{
	while (! (UCSRA & (1<<UDRE)));	/* Wait for empty transmit buffer*/
	UDR = ch ;
  82:	98 b3       	in	r25, 0x18	; 24
  84:	9f 70       	andi	r25, 0x0F	; 15
  86:	28 2f       	mov	r18, r24
  88:	20 7f       	andi	r18, 0xF0	; 240
  8a:	92 2b       	or	r25, r18
  8c:	98 bb       	out	0x18, r25	; 24
  8e:	c0 98       	cbi	0x18, 0	; 24
  90:	c1 9a       	sbi	0x18, 1	; 24
  92:	e7 ec       	ldi	r30, 0xC7	; 199
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	31 97       	sbiw	r30, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <LCD_Command+0x14>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <LCD_Command+0x1a>
  9c:	00 00       	nop
  9e:	c1 98       	cbi	0x18, 1	; 24
  a0:	ef e3       	ldi	r30, 0x3F	; 63
  a2:	fc e9       	ldi	r31, 0x9C	; 156
  a4:	31 97       	sbiw	r30, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <LCD_Command+0x22>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <LCD_Command+0x28>
  aa:	00 00       	nop
  ac:	28 b3       	in	r18, 0x18	; 24
  ae:	2f 70       	andi	r18, 0x0F	; 15
  b0:	f0 e1       	ldi	r31, 0x10	; 16
  b2:	8f 9f       	mul	r24, r31
  b4:	c0 01       	movw	r24, r0
  b6:	11 24       	eor	r1, r1
  b8:	82 2b       	or	r24, r18
  ba:	88 bb       	out	0x18, r24	; 24
  bc:	c1 9a       	sbi	0x18, 1	; 24
  be:	87 ec       	ldi	r24, 0xC7	; 199
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <LCD_Command+0x40>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <LCD_Command+0x46>
  c8:	00 00       	nop
  ca:	c1 98       	cbi	0x18, 1	; 24
  cc:	9f ef       	ldi	r25, 0xFF	; 255
  ce:	e1 ee       	ldi	r30, 0xE1	; 225
  d0:	f4 e0       	ldi	r31, 0x04	; 4
  d2:	91 50       	subi	r25, 0x01	; 1
  d4:	e0 40       	sbci	r30, 0x00	; 0
  d6:	f0 40       	sbci	r31, 0x00	; 0
  d8:	e1 f7       	brne	.-8      	; 0xd2 <LCD_Command+0x50>
  da:	00 c0       	rjmp	.+0      	; 0xdc <LCD_Command+0x5a>
  dc:	00 00       	nop
  de:	08 95       	ret

000000e0 <LCD_Char>:
  e0:	98 b3       	in	r25, 0x18	; 24
  e2:	9f 70       	andi	r25, 0x0F	; 15
  e4:	28 2f       	mov	r18, r24
  e6:	20 7f       	andi	r18, 0xF0	; 240
  e8:	92 2b       	or	r25, r18
  ea:	98 bb       	out	0x18, r25	; 24
  ec:	c0 9a       	sbi	0x18, 0	; 24
  ee:	c1 9a       	sbi	0x18, 1	; 24
  f0:	ef ec       	ldi	r30, 0xCF	; 207
  f2:	f7 e0       	ldi	r31, 0x07	; 7
  f4:	31 97       	sbiw	r30, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <LCD_Char+0x14>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <LCD_Char+0x1a>
  fa:	00 00       	nop
  fc:	c1 98       	cbi	0x18, 1	; 24
  fe:	ef e3       	ldi	r30, 0x3F	; 63
 100:	fc e9       	ldi	r31, 0x9C	; 156
 102:	31 97       	sbiw	r30, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Char+0x22>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Char+0x28>
 108:	00 00       	nop
 10a:	28 b3       	in	r18, 0x18	; 24
 10c:	2f 70       	andi	r18, 0x0F	; 15
 10e:	f0 e1       	ldi	r31, 0x10	; 16
 110:	8f 9f       	mul	r24, r31
 112:	c0 01       	movw	r24, r0
 114:	11 24       	eor	r1, r1
 116:	82 2b       	or	r24, r18
 118:	88 bb       	out	0x18, r24	; 24
 11a:	c1 9a       	sbi	0x18, 1	; 24
 11c:	87 ec       	ldi	r24, 0xC7	; 199
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <LCD_Char+0x40>
 124:	00 c0       	rjmp	.+0      	; 0x126 <LCD_Char+0x46>
 126:	00 00       	nop
 128:	c1 98       	cbi	0x18, 1	; 24
 12a:	9f ef       	ldi	r25, 0xFF	; 255
 12c:	e1 ee       	ldi	r30, 0xE1	; 225
 12e:	f4 e0       	ldi	r31, 0x04	; 4
 130:	91 50       	subi	r25, 0x01	; 1
 132:	e0 40       	sbci	r30, 0x00	; 0
 134:	f0 40       	sbci	r31, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <LCD_Char+0x50>
 138:	00 c0       	rjmp	.+0      	; 0x13a <LCD_Char+0x5a>
 13a:	00 00       	nop
 13c:	08 95       	ret

0000013e <LCD_Init>:
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	87 bb       	out	0x17, r24	; 23
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	83 ed       	ldi	r24, 0xD3	; 211
 146:	90 e3       	ldi	r25, 0x30	; 48
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	80 40       	sbci	r24, 0x00	; 0
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <LCD_Init+0xa>
 150:	00 c0       	rjmp	.+0      	; 0x152 <LCD_Init+0x14>
 152:	00 00       	nop
 154:	82 e0       	ldi	r24, 0x02	; 2
 156:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 15a:	88 e2       	ldi	r24, 0x28	; 40
 15c:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 160:	8c e0       	ldi	r24, 0x0C	; 12
 162:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 166:	86 e0       	ldi	r24, 0x06	; 6
 168:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 172:	2f ef       	ldi	r18, 0xFF	; 255
 174:	81 ee       	ldi	r24, 0xE1	; 225
 176:	94 e0       	ldi	r25, 0x04	; 4
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	80 40       	sbci	r24, 0x00	; 0
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <LCD_Init+0x3a>
 180:	00 c0       	rjmp	.+0      	; 0x182 <LCD_Init+0x44>
 182:	00 00       	nop
 184:	08 95       	ret

00000186 <LCD_String>:
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	ec 01       	movw	r28, r24
 18c:	88 81       	ld	r24, Y
 18e:	88 23       	and	r24, r24
 190:	31 f0       	breq	.+12     	; 0x19e <LCD_String+0x18>
 192:	21 96       	adiw	r28, 0x01	; 1
 194:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_Char>
 198:	89 91       	ld	r24, Y+
 19a:	81 11       	cpse	r24, r1
 19c:	fb cf       	rjmp	.-10     	; 0x194 <LCD_String+0xe>
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <main>:
}


int main()
{
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	00 d0       	rcall	.+0      	; 0x1aa <main+0x6>
 1aa:	00 d0       	rcall	.+0      	; 0x1ac <main+0x8>
 1ac:	1f 92       	push	r1
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62
	char String[5];

	LCD_Init();			/* Initialization of LCD*/
 1b2:	0e 94 9f 00 	call	0x13e	; 0x13e <LCD_Init>
	
	LCD_String("Temp");/* Write string on 1st line of LCD*/
 1b6:	81 e6       	ldi	r24, 0x61	; 97
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1be:	2a ea       	ldi	r18, 0xAA	; 170
 1c0:	36 ee       	ldi	r19, 0xE6	; 230
 1c2:	86 e9       	ldi	r24, 0x96	; 150
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	21 50       	subi	r18, 0x01	; 1
 1c8:	30 40       	sbci	r19, 0x00	; 0
 1ca:	80 40       	sbci	r24, 0x00	; 0
 1cc:	90 40       	sbci	r25, 0x00	; 0
 1ce:	d9 f7       	brne	.-10     	; 0x1c6 <main+0x22>
 1d0:	00 00       	nop
	_delay_ms(20000);
	LCD_Command(0xC0);/* Go to 2nd line*/
 1d2:	80 ec       	ldi	r24, 0xC0	; 192
 1d4:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	itoa(current_tempreture,String);
 1d8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 1dc:	be 01       	movw	r22, r28
 1de:	6f 5f       	subi	r22, 0xFF	; 255
 1e0:	7f 4f       	sbci	r23, 0xFF	; 255
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <itoa>
	LCD_String(String);	/* Write string on 2nd line*/
 1e8:	ce 01       	movw	r24, r28
 1ea:	01 96       	adiw	r24, 0x01	; 1
 1ec:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String>
 1f0:	ff cf       	rjmp	.-2      	; 0x1f0 <main+0x4c>

000001f2 <itoa>:
 1f2:	45 32       	cpi	r20, 0x25	; 37
 1f4:	51 05       	cpc	r21, r1
 1f6:	20 f4       	brcc	.+8      	; 0x200 <itoa+0xe>
 1f8:	42 30       	cpi	r20, 0x02	; 2
 1fa:	10 f0       	brcs	.+4      	; 0x200 <itoa+0xe>
 1fc:	0c 94 04 01 	jmp	0x208	; 0x208 <__itoa_ncheck>
 200:	fb 01       	movw	r30, r22
 202:	10 82       	st	Z, r1
 204:	cb 01       	movw	r24, r22
 206:	08 95       	ret

00000208 <__itoa_ncheck>:
 208:	bb 27       	eor	r27, r27
 20a:	4a 30       	cpi	r20, 0x0A	; 10
 20c:	31 f4       	brne	.+12     	; 0x21a <__itoa_ncheck+0x12>
 20e:	99 23       	and	r25, r25
 210:	22 f4       	brpl	.+8      	; 0x21a <__itoa_ncheck+0x12>
 212:	bd e2       	ldi	r27, 0x2D	; 45
 214:	90 95       	com	r25
 216:	81 95       	neg	r24
 218:	9f 4f       	sbci	r25, 0xFF	; 255
 21a:	0c 94 10 01 	jmp	0x220	; 0x220 <__utoa_common>

0000021e <__utoa_ncheck>:
 21e:	bb 27       	eor	r27, r27

00000220 <__utoa_common>:
 220:	fb 01       	movw	r30, r22
 222:	55 27       	eor	r21, r21
 224:	aa 27       	eor	r26, r26
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	aa 1f       	adc	r26, r26
 22c:	a4 17       	cp	r26, r20
 22e:	10 f0       	brcs	.+4      	; 0x234 <__utoa_common+0x14>
 230:	a4 1b       	sub	r26, r20
 232:	83 95       	inc	r24
 234:	50 51       	subi	r21, 0x10	; 16
 236:	b9 f7       	brne	.-18     	; 0x226 <__utoa_common+0x6>
 238:	a0 5d       	subi	r26, 0xD0	; 208
 23a:	aa 33       	cpi	r26, 0x3A	; 58
 23c:	08 f0       	brcs	.+2      	; 0x240 <__utoa_common+0x20>
 23e:	a9 5d       	subi	r26, 0xD9	; 217
 240:	a1 93       	st	Z+, r26
 242:	00 97       	sbiw	r24, 0x00	; 0
 244:	79 f7       	brne	.-34     	; 0x224 <__utoa_common+0x4>
 246:	b1 11       	cpse	r27, r1
 248:	b1 93       	st	Z+, r27
 24a:	11 92       	st	Z+, r1
 24c:	cb 01       	movw	r24, r22
 24e:	0c 94 29 01 	jmp	0x252	; 0x252 <strrev>

00000252 <strrev>:
 252:	dc 01       	movw	r26, r24
 254:	fc 01       	movw	r30, r24
 256:	67 2f       	mov	r22, r23
 258:	71 91       	ld	r23, Z+
 25a:	77 23       	and	r23, r23
 25c:	e1 f7       	brne	.-8      	; 0x256 <strrev+0x4>
 25e:	32 97       	sbiw	r30, 0x02	; 2
 260:	04 c0       	rjmp	.+8      	; 0x26a <strrev+0x18>
 262:	7c 91       	ld	r23, X
 264:	6d 93       	st	X+, r22
 266:	70 83       	st	Z, r23
 268:	62 91       	ld	r22, -Z
 26a:	ae 17       	cp	r26, r30
 26c:	bf 07       	cpc	r27, r31
 26e:	c8 f3       	brcs	.-14     	; 0x262 <strrev+0x10>
 270:	08 95       	ret

00000272 <_exit>:
 272:	f8 94       	cli

00000274 <__stop_program>:
 274:	ff cf       	rjmp	.-2      	; 0x274 <__stop_program>
